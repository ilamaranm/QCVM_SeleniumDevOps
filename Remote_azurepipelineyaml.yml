pool: 
  vmImage: 'windows-latest'

variables:
  timezone: 'India Standard Time'  # Set this to India Standard Time

steps:

- checkout: self
  displayName: 'Checkout Repository'

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '21'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
  displayName: 'Install JDK 21'

- powershell: |
   $chromedriverUrl = "https://storage.googleapis.com/chrome-for-testing-public/129.0.6668.71/win64/chromedriver-win64.zip"
   Invoke-WebRequest -Uri $chromedriverUrl -OutFile chromedriver.zip
   New-Item -ItemType Directory -Force -Path C:\webdriver
   Expand-Archive -Path chromedriver.zip -DestinationPath C:\webdriver  
  displayName: 'Download and Install Chromedriver'

- powershell: |
    [System.Environment]::SetEnvironmentVariable('PATH', $env:PATH + ";C:\webdriver", [System.EnvironmentVariableTarget]::Process)
    Write-Host "##vso[task.setvariable variable=chromedriverPath]C:\webdriver"
  displayName: 'Set Chromedriver Path'

- powershell: |
    Write-Host "Listing all files in project directory:"
    Get-ChildItem -Recurse -Path $(System.DefaultWorkingDirectory)
  displayName: 'List Project Files'

- powershell: |
    tzutil /s "$(timezone)"
    $newTimeZone = tzutil /g
    Write-Host "Time zone is set to: $newTimeZone"
    $currentTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Write-Host "Current Agent Time: $currentTime"
  displayName: 'Set Timezone to India Standard Time'
  
- powershell: |
      $env:SQL_CONNECTION_STRING = "jdbc:sqlserver://qcvm001.eastus.cloudapp.azure.com\\MSSQLSERVER2022;databaseName=AHI_GHB_WHMIS;encrypt=true;trustServerCertificate=true"
      Write-Host "##vso[task.setvariable variable=SQL_CONNECTION_STRING]$env:SQL_CONNECTION_STRING"
  displayName: 'Set SQL Server Connection String'

- powershell: |
      mvn clean install jacoco:report" -Dsql.connection.string=$($env:SQL_CONNECTION_STRING)" 
  displayName: 'Build and Run Tests with Maven and JaCoCo'

- task: PublishTestResults@2
  inputs:
      testResultsFormat: 'JUnit'                 
      testResultsFiles: 'target/test-output/*.xml'      
      testRunTitle: 'Test Results'                
      mergeTestResults: true                       
  displayName: 'Publish Test Results'

- task: PublishCodeCoverageResults@1
  inputs:
      codeCoverageTool: 'JaCoCo'
      summaryFileLocation: '$(Build.SourcesDirectory)/target/jacoco-report/index.html'  # Path to the summary report (HTML)
      reportDirectory: '$(Build.SourcesDirectory)/target/jacoco-report'  # Path to the directory containing JaCoCo reports
      failIfCoverageEmpty: true
  displayName: 'Publish Code Coverage Results'